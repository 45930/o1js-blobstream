
import { FpC, FrC } from "../towers/index.js";

// taken from: https://github.com/succinctlabs/sp1-contracts/blob/ratan/v1.0.5-testnet/contracts/src/PlonkVerifier.sol

type Sp1PlonkVk = {
    pub_inputs: FrC,
    domain_size: number[],
    inv_domain_size: FrC,

    g1_gen_x: FpC, 
    g1_gen_y: FpC

    omega: FrC,

    ql_x: FpC,
    ql_y: FpC,

    qr_x: FpC,
    qr_y: FpC,

    qm_x: FpC,
    qm_y: FpC,

    qo_x: FpC,
    qo_y: FpC,

    qk_x: FpC,
    qk_y: FpC,

    qs1_x: FpC,
    qs1_y: FpC,

    qs2_x: FpC,
    qs2_y: FpC,

    qs3_x: FpC,
    qs3_y: FpC,

    coset_shift: FrC,

    qcp_0_x: FpC,
    qcp_0_y: FpC,

    index_commit_api_0: FrC,
    num_custom_gates: FrC


    // LAGRANGE FOR CUSTOM GATES PUBLIC INPUTS
    omega_pow_i: FrC, 
    omega_pow_i_div_n: FrC
}

const VK: Sp1PlonkVk = {
    pub_inputs: FrC.from(2n),
    domain_size: [1].concat(Array(25).fill(0)), // 33554432 = 2^25,
    inv_domain_size: FrC.from(21888242219518804655518433051623070663413851959604507555939307129453691614729n),

    g1_gen_x: FpC.from(14312776538779914388377568895031746459131577658076416373430523308756343304251n),
    g1_gen_y: FpC.from(11763105256161367503191792604679297387056316997144156930871823008787082098465n),

    omega: FrC.from(19200870435978225707111062059747084165650991997241425080699860725083300967194n),

    ql_x: FpC.from(7407214510609079145773511377600669946182675406099819935159338773180963032920n),
    ql_y: FpC.from(3889572140636551481918367605181004843678060827549237388417633453568279634611n),

    qr_x: FpC.from(13185587283948207039104909600533393134642892790477195397204788972655935187034n),
    qr_y: FpC.from(6451325745723191433786431885069978482139162540042467099835998301383703554688n),

    qm_x: FpC.from(7831121084190844355678123756695098161028116896368533348735307958954908573570n),
    qm_y: FpC.from(21423217261232968699613611347737906259833622177052298937517042548376276313438n),

    qo_x: FpC.from(12419033777431380552505290008781347497974878014421729798707093080965200361938n),
    qo_y: FpC.from(14405784914363318893588095549313718460584773062530955039336108755620243930516n),

    qk_x: FpC.from(4811396650865004697225019631507960299372172242731495526799354745511476203569n),
    qk_y: FpC.from(10570898863026195981286955019805202755257962416067906968977768446967627177077n),

    qs1_x: FpC.from(6968952419837705449998661901501008975958799249703100090180103311190010965871n),
    qs1_y: FpC.from(1249467605411785301185223257548811095553790625974289413299263690359522154232n),

    qs2_x: FpC.from(4146220958340634117711137018067570486438638661164597634569826319047340086504n),
    qs2_y: FpC.from(11514940594097180306355347346721706752308488755168473282895462849476778731992n),

    qs3_x: FpC.from(9448994237127116300590468875689047378195790180478128432750829709164772937855n),
    qs3_y: FpC.from(19105625469644071502486127957107459666205424766333120347163247063872894908167n),

    coset_shift: FrC.from(5n),

    qcp_0_x: FpC.from(17454416295032677617185412985505503605684799782830882030707498476438392095244n),
    qcp_0_y: FpC.from(19541761788913122331184139395510543772651753333302925962600032923013908029361n),

    index_commit_api_0: FrC.from(18030217n),
    num_custom_gates: FrC.from(1n),

    // LAGRANGE FOR CUSTOM GATES PUBLIC INPUTS 
    omega_pow_i: FrC.from(11812506829823094827467561193979052028275427478655125212029460474344420830331n), 
    omega_pow_i_div_n: FrC.from(8617480580782367199237829232564216011571743629440304659860869709683191151964n)
}

export { Sp1PlonkVk, VK } 